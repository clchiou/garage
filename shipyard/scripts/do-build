#!/usr/bin/env python3

"""Plan and launch builders (this script wraps the builder script)."""

from pathlib import Path
import datetime
import re
import sys

ROOT = Path(__file__).absolute().parent.parent.parent
sys.path.append(str(ROOT / 'py' / 'foreman'))
sys.path.append(str(ROOT / 'py' / 'garage'))
sys.path.append(str(ROOT / 'py' / 'startup'))
sys.path.append(str(ROOT / 'shipyard'))

from garage import apps
from garage import scripts

import shipyard


@apps.with_argument(
    '--dry-run', action='store_true', help='do not really launch builders')
@apps.with_argument('--version', help='set build version')
@shipyard.with_foreman_argument
@shipyard.with_builder_argument
@apps.with_argument('rule', help='set build rule')
def main(args):
    rules = shipyard.RuleIndex(args)
    rules.load_from_labels([args.rule])
    with scripts.dry_run(args.dry_run):
        return do_build(args, rules)


def do_build(args, rules):

    builder = shipyard.Builder(args)

    # Figure out what kind of rule we are building.
    # TODO: If it's a build_image rule, we should set its version.
    main_rule = rules.get_rule(args.rule)
    if main_rule.annotations.get('rule-type') != 'build_pod':
        # It's not a pod build rule - no planning required.
        builder.build(main_rule.label)
        return 0

    # We are building a pod - let's find all build_image rules.
    build_image_rules = shipyard.get_build_image_rules(rules, main_rule)

    if args.version is not None:
        version = args.version
    else:
        version = int(datetime.datetime.now().timestamp())

    # Start the build!

    for rule in build_image_rules:

        image_name = rules.get_parameter(
            rule.annotations['image-parameter'],
            implicit_path=rule.label.path,
        )
        image_name = image_name.default['name']

        version_label = rules.get_parameter(
            rule.annotations['version-parameter'],
            implicit_path=rule.label.path,
        )
        version_label = version_label.label

        builder.build(rule.label, extra_args=[
            '--build-name', 'build-%d-image-%s' % (version, image_name),
            '--parameter', '%s=%s' % (version_label, version),
        ])

    pod_name = rules.get_pod_name(main_rule)

    version_label = rules.get_parameter(
        main_rule.annotations['version-parameter'],
        implicit_path=main_rule.label.path,
    )
    version_label = version_label.label

    builder.build(main_rule.label, extra_args=[
        '--build-name',
        'build-%d-pod-%s' %
        (version, re.sub(r'[^a-zA-Z0-9]', '-', str(pod_name))),
        '--parameter', '%s=%s' % (version_label, version),
    ])

    return 0


if __name__ == '__main__':
    apps.run(main)
