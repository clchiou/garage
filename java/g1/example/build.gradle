apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'
apply plugin: 'nu.studer.jooq'

apply from: "${rootProject.projectDir}/scripts/base.gradle"
apply from: "${rootProject.projectDir}/scripts/capnproto.gradle"
apply from: "${rootProject.projectDir}/scripts/shadowJar.gradle"

dependencies {
    implementation "args4j:args4j:${project.ext.args4jVersion}"
    implementation "com.google.guava:guava:${project.ext.guavaVersion}"
    implementation "org.slf4j:slf4j-api:${project.ext.slf4jVersion}"
    implementation "org.slf4j:slf4j-simple:${project.ext.slf4jVersion}"

    annotationProcessor "com.google.dagger:dagger-compiler:${project.ext.daggerVersion}"
    implementation "com.google.dagger:dagger:${project.ext.daggerVersion}"

    implementation "org.jooq:jooq:${project.ext.jooqVersion}"
    implementation "org.xerial:sqlite-jdbc:${sqliteJdbcVersion}"
    jooqRuntime "org.xerial:sqlite-jdbc:${sqliteJdbcVersion}"

    implementation "org.capnproto:runtime:${project.ext.capnprotoVersion}"

    implementation "org.apache.lucene:lucene-core:${project.ext.lucene8Version}"

    implementation project(':base')
    implementation project(':messaging')
    implementation project(':search')
    implementation project(':third-party:nng')
}

//
// jOOQ build script.
//

def jooqGeneratedSchemaDir = "${buildDir}/tmp/generateExampleSchema"
def jooqGeneratedSourceDir = "${ext.generatedSourcesDir}/jooq/java/main"

task generateExampleSchema(type: Exec) {
    doFirst {
        mkdir jooqGeneratedSchemaDir
        mkdir jooqGeneratedSourceDir
    }
    commandLine(
        'sqlite3',
        "${jooqGeneratedSchemaDir}/example.db",
        ".read ${projectDir}/src/main/sql/example.sql"
    )
}

jooq {
    example(sourceSets.main) {
        jdbc {
            driver = 'org.sqlite.JDBC'
            url = "jdbc:sqlite:${jooqGeneratedSchemaDir}/example.db"
        }
        generator {
            database {
                name = 'org.jooq.meta.sqlite.SQLiteDatabase'
            }
            generate {
                relations = true
                deprecated = false
                records = true
                immutablePojos = true
                fluentSetters = true
            }
            target {
                packageName = 'g1.example.jooq'
                directory = jooqGeneratedSourceDir
            }
        }
    }
}

generateExampleJooqSchemaSource.dependsOn generateExampleSchema
