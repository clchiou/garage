dependencies {

    compile "org.apache.lucene:lucene-core:${rootProject.ext.luceneVersion}"
    compile "org.apache.lucene:lucene-queryparser:${rootProject.ext.luceneVersion}"
    compile "org.capnproto:runtime:${rootProject.ext.capnprotoVersion}"
    compile "org.jooq:jooq:${rootProject.ext.jooqVersion}"

    compile project(':base')
    compile project(':search-indexer')

    jooqRuntime "org.xerial:sqlite-jdbc:${sqliteJdbcVersion}"

    runtime "org.xerial:sqlite-jdbc:${sqliteJdbcVersion}"
}

jooq {

    version = rootProject.ext.jooqVersion
    edition = 'OSS'

    examples(sourceSets.main) {

        jdbc {
            driver = 'org.sqlite.JDBC'
            url = "jdbc:sqlite:${buildDir}/books.db"
        }

        generator {

            database {
                name = 'org.jooq.util.sqlite.SQLiteDatabase'
            }

            generate {
                relations = true
                deprecated = false
                records = true
                immutablePojos = true
                fluentSetters = true
            }

            target {
                packageName = 'garage.examples'
                directory = "${buildDir}/generated/source/jooq/main"
            }
        }
    }
}

// Generate books.db

task generateExamplesDatabase(type: Exec) {

    doFirst {
        mkdir buildDir
    }

    commandLine 'sqlite3', "${buildDir}/books.db", ".read ${projectDir}/books.sql"
}

generateExamplesJooqSchemaSource.dependsOn generateExamplesDatabase

// Capnp

task compileCapnproto(type: Exec) {

    doFirst {
        mkdir "${buildDir}/generated/source/capnp/main"
    }

    commandLine 'capnp', 'compile',
                "--output=java:${buildDir}/generated/source/capnp/main",
                "--src-prefix=${projectDir}/src/main/java",
                "${projectDir}/src/main/java/garage/examples/books.capnp"
}

compileJava.dependsOn compileCapnproto

// ShadowJar

shadowJar.enabled = true
