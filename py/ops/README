# ops - Operations Tool

ops is a collection of scripts executed on local and remote machines.
You add functionalities to ops when all of the following conditions are
true:

  * Such functionality cannot be executed from inside a container.

  * Implementing such functionality in configuration management system
    is clumsy.

In addition, you should:

  * Make ops depend only on Python 3 standard library so that deploying
    ops to remote machines will be easy (you may simply create an zip
    archive and copy that archive to the remote machines).

## Code organization

The top-level packages `ops` are divided by the physical locations where
they will be executed.

* `mob` (main operating base) scripts are executed in a secured location
  to support administrative tasks.

* `onboard` scripts are executed on production machine.

### Onboard commands basic usage

To deploy a pod, you create a deployment bundle, copy that bundle to the
target machine, and then run the ops tool on the bundle.  You may remove
the bundle after deployment.  A bundle includes:

  * A JSON file "pod.json" describes the pod.

  * All required build artifacts: images, unit files, etc.
