ops - Low-Level Operation Scripts

ops is a collection of scripts executed on the remote machines, most
commonly by configuration management tools.

You add more scripts to here only when both of the following are met:

  * It is not possible to be done within a container.

  * Implementing in configuration management tools is clumsy.

Otherwise you should keep these ops scripts at minimum, meaning:

  * If you are in situations where ops scripts need to be executed as a
    daemon, something probably went wrong.

  * The ops scripts should only depend on Python 3 standard library (so
    that it is easy to deploy these scripts to the remote machine).


=== Pod (Container Group)

Containers are (un-)deployed in a tightly-coupled group, which would
usually be called a "pod".  A container group is specified by an Appc
pod manifest with additional (deployment) metadata.

    {
        "acVersion": "0.8.6",
        "acKind": "PodManifest",

        "annotations": [
            {
                "name": "ops",
                "value": """{  # JSON-encoded.
                    # Required.
                    "name": "example-pod",

                    # Required, integer.
                    "version": 1001,

                    # Optional: Series of systemd units.
                    "systemd-units": [
                        {
                            # Required: Location of the unit file,
                            # either a path or an URI.
                            "unit-file": "path/to/unit-file",

                            # Optional, default to false.
                            "start": true,

                            # Optional: Instances of a templated unit,
                            # which could be either as an array or as
                            # the number of instances.
                            "instances": [8080, 8081, 8082],
                        },
                        ...
                    ],

                    # Optional: Series of image locations.
                    "images": [
                        {
                            # Optional: Image ID.
                            # https://github.com/appc/spec/blob/master/spec/types.md#image-id-type
                            "id": "sha512-XXX",

                            # Either "uri" or "path" must be set ("uri"
                            # could be without scheme).
                            "path": "path/to/image.aci",

                            # Optional: Location of signature, either
                            # path or URI.
                            "signature": "path/to/image.aci.asc",
                        },
                        ...
                    ],

                    # Optional: Series of volume initial contents.
                    #
                    # They are _NOT_ shared across versions of pod,
                    # though; if you want to share stateful data across
                    # versions of pod, you probably should things like
                    # RDBMS.
                    "volumes": [
                        {
                            # Required.
                            "volume": "volume-name",

                            # Required: Either path or URI.
                            "data": "path/to/data.tar.gz",
                        },
                        ...
                    ],
                }""",
            },
        ],

        ...
    }


To deploy, you create a deployment bundle, copy that bundle to the
target machine, and then run the ops scripts on the bundle.  You may
remove the bundle after deployment.  A bundle includes:

  * A JSON file defines a container group (usually named "pod.json").

  * All required build artifacts: images, unit files, etc.  (Note that
    we said that the "path" of an image is relative to pod.json.)

The build artifacts are stored under /etc (for configuration files) and
container runtime (for images).  The pod.json is also stored under /etc,
which means you may redeploy prior versions of the same group that you
have deployed to this machine, given that you have not cleaned them up.
